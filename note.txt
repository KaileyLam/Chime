Font:
- Galada (coca): https://fonts.google.com/specimen/Galada?preview.text=Chime!&classification=Handwriting
- Borel (cute): https://fonts.google.com/specimen/Borel?preview.text=Chime!&classification=Handwriting
- Grand Hotel (really signature): https://fonts.google.com/specimen/Grand+Hotel?preview.text=Chime!&classification=Handwriting
- Rubik (round edge, approx equal in char's width): https://fonts.google.com/specimen/Rubik?preview.text=Home&stroke=Sans+Serif&icon.category=Audio%26Video

Ref:
- homepage: https://www.tailwindawesome.com/resources/vue-tailwind-admin/demo
- register/login: https://flowbite.com/blocks/marketing/register/
- library: https://tailwindflex.com/@noob_dev/user-profile-card-with-cover-image
- library (pagination): https://www.material-tailwind.com/docs/html/pagination
- publish (photo upload): https://kopi.dev/tailwind/upload-image-with-image-preview-using-tailwind-ui/
- publish (form): https://tailwindcomponents.com/component/input-with-image-preview
- publish (textarea enable self-expansion): https://stackoverflow.com/questions/2803880/is-there-a-way-to-get-a-textarea-to-stretch-to-fit-its-content-without-using-php
- publish (textarea disable resize): https://stackoverflow.com/questions/5235142/how-do-i-disable-the-resizable-property-of-a-textarea
- publish (mp3 input): https://flowbite.com/docs/forms/file-input/
- publish (mp3 input): https://www.geeksforgeeks.org/what-is-the-limit-file-format-when-using-input-typefile/

Further Updates:
- publish - Styling input UI: https://bobbyhadz.com/blog/change-or-remove-no-file-chosen-input-type-file-in-html
- publish - Styling input UI: https://www.kindacode.com/snippet/how-to-style-file-inputs-with-tailwind-css/

Idea:
// Click Register----------------------------
// upload to Firestore "accounts" Collection: mail, name, userID, isArtist
// register

// Click Login-------------------------------
// check isArtist: from Firestore "accounts" Collection (with "mail" == mailLogin), fetch "isArtist" and assign to const isArtist 
// localStorage.setItem("isArtist", isArtist)

// Lib/profile display-----------------------

// check isArtist: from Firestore Collection "accounts" (with "mail" == mailLogin), fetch "isArtist" and assign to const isArtist 
// if another user isArtist = true: display "Published tracks", "btnPublish"
// if another user isArtist = false: display "Saved tracks", "btnSaveTrack"

// check userID: from Firestore Collection "accounts" (with "mail" == mailLogin), fetch "userID" and assign to const currentUserID 
// fetch clicked "userID" and assign to const anotherUserID 
// if anotherUserID !== currentUserID: display "btnFollow"

// fetch tracks from "songs"
// display 10 latest tracks with userid==currentUserID (order(time, dsc))